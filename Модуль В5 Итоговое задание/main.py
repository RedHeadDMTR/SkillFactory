field = [[' '] * 3 for i in range(3)]
# [[' ', ' ', ' '], [' ', ' ', ' '], [' ', ' ', ' ']]

print('''
///////////////////// КРЕСТИКИ - НОЛИКИ ////////////////////
////////////////// Добро пожаловать в игру! ////////////////
________________________Правила игры_________________________
|* Определитесь кто будет играть за КРЕСТИК и кто за НОЛИК  |
|* Ход переходит от одного игрока к другому последовательно |
|* Побеждает тот кто смог заполнить три клетки:             |
|                     по горизонтали                        |
|                     вертикали                             |
|                     диагонали                             |
-------------------------------------------------------------''')


# Отрисовка игровой зоны
def game_zone():
    print()
    print('  | 0 | 1 | 2 | ')
    print('  -------------')
    for index, row in enumerate(field):                 # enumerate создает кортежи с индексом и значением
        row_str = f"{index} | {' | '.join(row)} | "     # где index примет индекс, а row примет значение
        print(row_str)                                  # ' | '.join(row) склеивает элементы списка между собой
        print('  -------------')                        # с разделителем в виде |
    print()
#   | 0 | 1 | 2 |
#   -------------
# 0 |   |   |   |
#   -------------
# 1 |   |   |   |
#   -------------
# 2 |   |   |   |
#   -------------


# Запрос у пользователя координат размещения Х или О, проверка ввода данных
def ask_and_check():
    while True:
        cords = input('-------- Введите X и Y координаты: ').split()

        if len(cords) != 2:                             # проверка на количество введенных данных
            print('Введите 2 координаты!')
            continue

        x, y = cords                                    # поместили координаты в x и y

        if not(x.isdigit()) or not(y.isdigit()):        # проверка на числовой тип
            print('Введите числа!')
            continue

        x, y = int(x), int(y)                           # преобразовали в целочисленный тип

        if 0 > x or x > 2 or 0 > y or y > 2:            # проверка на выход из допустимых границ
            print('Координаты вне диапазона!')
            continue

        if field[x][y] != ' ':                          # проверка на занятость ячейки
            print('Клетка занята!')
            continue

        return x, y                                     # возвращает значения x и y в функцию ask_and_check()
# print(ask_and_check())
# 1 2
# (1, 2)


# Проверка выигрышных комбинаций
def check_win():                                        # победные комбинации
    win_comb = (((0, 0), (0, 1), (0, 2)),               # ---
                ((1, 0), (1, 1), (1, 2)),               # ---
                ((2, 0), (2, 1), (2, 2)),               # ---
                ((0, 2), (1, 1), (2, 0)),               # /
                ((0, 0), (1, 1), (2, 2)),               # \
                ((0, 0), (1, 0), (2, 0)),               # |
                ((0, 1), (1, 1), (2, 1)),               # |
                ((0, 2), (1, 2), (2, 2)))               # |
    for cord in win_comb:                               # проходим по строкам
        symbols = []                                    # пустой список
        for c in cord:                                  # проходим по столбцам
            symbols.append(field[c[0]][c[1]])           # добавляет в пустой список symbols заполненную
        if symbols == ['X', 'X', 'X']:                  # ячейку с индексами из списка победных комбинаций
            print('Выиграл Х!')
            return True
        if symbols == ['O', 'O', 'O']:
            print('Выиграл О!')
            return True
    return False


num = 0                             # начальный счетчик хода
while True:
    num += 1                        # на каждом цикле счетчик ходу увеличивается для перехода хода

    game_zone()                     # запускаем функцию, которая рисует игровое поле

    if num % 2 == 1:                # условие для определения хода
        print('Ход за X')
    else:
        print('Ход за O')

    x, y = ask_and_check()          # поместили в x и y значения введенные пользователем (координаты)

    if num % 2 == 1:                # условие для заполнения игрового поля (определенная ячейка заполнится
        field[x][y] = 'X'           # Х или О в соответствии с тем чей ход
    else:
        field[x][y] = 'O'

    if check_win():                 # если комбинация есть в функции check_win(), то прерывание работы цикла
        break

    if num == 9:                    # если на 9 ходе нет совпадений с выигрышными комбинациями, то Ничья
        print("Ничья!")
        break
